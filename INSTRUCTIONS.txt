Set Sleep to NEVER

CD INTO DIRECTORY FIRST!!

---ELEPHANT ROBOT PI PASSWORD:---

This password should be set by the customer ownself. 
If not ok, please try "aibot1234" or "Elephant"

---NEVER SLEEP:---
  
  0. Screensaver -> Disable Screensaver
  1. Power -> Display -> Never (all)

---IF FORGET ADMIN PASSWORD:---
  
  0. sudo raspi-config
  
---CHANGING THE SCREEN RESOLUTION to 1920x1080 60hz:---
  (Fix link: https://askubuntu.com/questions/1215775/arm-ubuntu-wont-let-me-change-my-resolution)
  (See full list of modes here: https://raspberrypi.stackexchange.com/tags/config.txt/info | https://www.raspberrypi.com/documentation/computers/config_txt.html)
  (hdmi_mode=82 [1920x1080 60hz] | hdmi_mode=69 [1280x720 60hz])
  (config_hdmi_boost=7 (goes from 0-11, default 5))
  (force_hotplug=1 (forces it to connect to monitor even if no monitor))

  1. sudo nano /boot/firmware/usercfg.txt 
  2. Plop this in:

    # Place "config.txt" changes (dtparam, dtoverlay, disable_overscan, etc.) in
    # this file. Please refer to the README file for a description of the variouszn

    # configuration files on the boot partition.

    [HDMI:0]
    force_hotplug=1
    hdmi_group=2
    hdmi_mode=82
    hdmi_drive=2
	config_hdmi_boost=7

    [HDMI:1]
    hdmi_group=2
    hdmi_mode=82
    hdmi_drive=2
	config_hdmi_boost=7

---INSTALLING CORRECT PYTHON---

  0. sudo apt-get update

  1. sudo apt install python3.8

  2. sudo python3.8 -m pip install --upgrade pip
  3. sudo python3.8 -m pip install --upgrade setuptools
  4. sudo python3.8 -m pip install unroll
  5. sudo python3.8 -m pip install pymycobot
  6. sudo python3.8 -m pip install flask
  6.a apt-get install python3-flask (if fail)
  6.b sudo apt install python-flask (if fail)

  7. sudo apt-get remove python3-virtualenv
  8. sudo python3.8 -m pip install virtualenv

  9.  sudo python3.8 -m pip install pipenv==2018.11.26
  10. sudo python3.8 -m pipenv install

---INSTALLING NODE:---

  12. sudo apt install nodejs
  13. npm install
  14. npm install -D tailwindcss@latest postcss@latest autoprefixer@latest

---OPTIONAL: Network Not Managed or NPM ENETUNREACH Error---
  https://askubuntu.com/questions/71159/network-manager-says-device-not-managed

  0. sudo nano /etc/NetworkManager/NetworkManager.conf
  1. change the line managed=false to managed=true
  2. sudo service network-manager restart

  OPTIONAL (if run or install npm fails: https://www.codegrepper.com/search.php?answer_removed=1&q=%20sh:%201:%20next:%20Permission%20denied%20npm%20ERR!%20code%20126)
  0. (optional?) npm cache clean --force
  1. Delete package-lock.json
  2. Delete node_modules
  3. sudo apt remove nodejs
  4. Run steps 12-14 again

---EDITING IP ADDRESS:---

  0. ls -a (OPTIONAL: shows all hidden files:)
  1. sudo nano .env
  2. Edit .env file: (Change to local IP address)
  3. sudo reboot now

---(TROUBLESHOOT OPTIONAL) CREATE NEW FLASK VIRTUALENV:---

  0. virtualenv flask
  1. source flask/bin/activate

---INSTALLING ROBOT SERVER AND SIMULATOR:---

https://github.com/johnchoi313/react-to-flask-test

---RUNNING SERVER(robotand webpage)---

  15. (One shell) sudo python3.8 -m pipenv run python routes.py
  16. (Another shell) sudo npm run dev

---SETTING UP AUTOSTART:---

  (if stupid "/bin/bash^M: bad interpreter: No such file or directory" error:)
  sed -i -e 's/\r$//' scriptname.sh

  (use init.d method! ACTUALLY, INITD methodd SUCKS.)
  (use systemd method, BECAUSE IT ACTUALLY F*CKING WORKS (actually, no it doesn't:): https://tecadmin.net/run-shell-script-as-systemd-service/)

  (JUST USE FUCKING RC.LOCAL: https://www.simplified.guide/linux/automatically-run-program-on-startup#automatically-run-program-on-linux-startup-via-rclocal)
  sudo nano /etc/rc.local
  sudo chmod a+x /etc/rc.local
  sudo chmod +x autostart_all.sh

  (JUST USE THE FUCKING STARTUP APPLICATIONS)

  also: sudo update-rc.d autostart_initd.sh defaults

  1. On the Desktop/ create a shell script file called main-shell-script.sh with the below contents:

    #!/bin/bash

    x-terminal-emulator -e npm --prefix /home/ubuntu/Desktop/react-to-flask-test run dev &
    x-terminal-emulator -e python3 /home/ubuntu/Desktop/react-to-flask-test/routes.py &

  1.a: if "main-shell-script.sh" a;ready exists, put it in /etc/init.d:
  (NOTE: autostart initd script MUST NOT HAVE .sh at end)
  
   sudo cp main-shell-script /etc/init.d/main-shell-script

  2. Make the shell script executable by running this command from the 
     Desktop/ directory where the shell script should be located: 

   cd /etc/init.d

   sudo chmod +x main-shell-script.sh 
   sudo chown root:root main-shell-script.sh
   
   sudo update-rc.d autostart_initd.sh defaults
   sudo update-rc.d autostart_initd.sh enable

   ls /etc/rc*.d

    Note: you only have to do this once to make the file executable. After that it won't have to be done again.

  3. You can test this shell script by running the following command from the directory where the shell script is saved:

    ./main-shell-script.sh  (yes there's a space after the dot).

  4. Navigate to the root directory by opening a terminal and entering cd ..  until you can't go up a directory anymore.
  
  5. Change directory to where the autostart script is located:

    cd etc/xdg/lxsession/LXDE-pi

  6. Open the autostart file by typing: 
    
	sudo nano autostart

  7. In the autostart file, add the following command to the bottom: 

    @lxterminal -e bash /home/pi/Desktop/main-shell-script.sh

  8. You should be good to go now. 
    To test it, enter sudo reboot from the terminal and when the computer boots up, you should see the 2 terminal windows open.

---IF WIFI STOPS WORKING FOR NO REASON: (FU LINUX)---
https://medium.com/@TSwarper/device-not-managed-problem-in-ubuntu-afa28c255ec9

sudo nano /etc/NetworkManager/NetworkManager.conf

change this:
  [ifupdown]
  managed=true
to this:
  [ifupdown]
  managed=false
  
delete this:
  [keyfile]
  unmanaged-devices=interface-name:wlp2s0b1  

---VNC SERVER (OPTIONAL)----
install raspberry pi vnc server: (not needed)
https://www.realvnc.com/en/blog/how-to-setup-vnc-connect-raspberry-pi/

  1. sudo apt-get install realvnc-vnc-server
  2. sudo apt install tightvncserver

  change password:
  3. sudo vncpasswd 

